includes:
    - 'vendor/phpstan/phpstan-doctrine/extension.neon'
    - 'vendor/symplify/phpstan-extensions/config/config.neon'

services:
    -
         class: Pehapkari\Utils\PHPStan\Rule\SelectWithGroupByRule
         tags: [phpstan.rules.rule]

parameters:
    paths:
        - "src"
        - "packages"

    level: max
    reportUnmatchedIgnoredErrors: false
    checkGenericClassInNonGenericObjectType: false
    checkMissingIterableValueType: false

    excludes_analyse:
        - "*/Entity*"
        - '*/var/cache/*'
        - '*/var/log/*'
        - 'statie/tests'
        # temporary
        - 'packages/Youtube/src/FacebookVideosProvider/PehapkariFacebookPageVideosProvider.php'
        - 'packages/Marketing/src/Social/FacebookPublisher.php'

    ignoreErrors:
        # known value
        - '#Method Pehapkari\\Statie\\Posts\\Year2018\\Cart\\Infrastructure\\DoctrineCartRepository::find\(\) should  Pehapkari\\Statie\\Posts\\Year2018\\Cart\\Domain\\Cart|null but returns object|null#'

        - '#Method Pehapkari\\Github\\EventSubscriber\\CatchTemplateEventSubscriber\:\:resolveControllerMethod\(\) should return string but returns object\|string#'
        - '#Parameter \#1 \$object of function get_class expects object, object\|string given#'

        # mixed
        - '#with no typehint specified#'
        - '#Parameter \#1 \$argument of class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'

        - '#Call to method setRelativeUploadDestination\(\) on an unknown class Pehapkari\\BetterEasyAdmin\\Entity\\UploadableImageTrait#'

        - '#PHPDoc tag @var for property Pehapkari\\Blog\\Posts\\Year2018\\Cart\\Domain\\Cart\:\:\$items contains unresolvable type#'
